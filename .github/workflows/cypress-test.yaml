name: Cypress Tests

on:
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Install Allure
      run: |
        npm install -g allure-commandline --save-dev

    - name: Install jq
      run: sudo apt-get install jq

    - name: Run Cypress tests with Percy
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      run: |
        OUTPUT=$(npx percy exec -- npx cypress run)
        echo "$OUTPUT"
        BUILD_URL=$(echo "$OUTPUT" | grep -o 'https://percy.io/[^ ]*')
        BUILD_URL=$(echo "$OUTPUT" | grep -oP 'https://percy\.io/\S+')
        echo "PERCY_BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

    - name: Generate Allure Report
      if: always()
      run: |
        npx allure generate allure-results --clean -o allure-report

    - name: Get Allure history
      uses: actions/checkout@v2
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages

    - name: Allure Report action from marketplace
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        gh_pages: gh-pages
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GH_PAT }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: allure-history

    - name: Send Success Message to Discord
      if: ${{ success() }}
      run: |
        REPORT_TIME=$(TZ='America/Sao_Paulo' date "+%d/%m/%Y %H:%M:%S")
        REPORT_URL="#TODO"
        curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
        -H "Content-Type: application/json" \
        -d '{
              "content": "‚úÖ Todos os testes passaram com sucesso! üéâ\n\nVerifique o relat√≥rio em: '"$REPORT_URL"'\n\nVerifique o relat√≥rio da build do Percy em: #TODO",
              "embeds": [{
                "title": "Allure Test Report",
                "description": "A execu√ß√£o dos testes foi conclu√≠da com sucesso! :tada:",
                "color": 3066993,
                "fields": [{
                  "name": ":calendar: Data de Execu√ß√£o",
                  "value": "'"$REPORT_TIME"'"
                }]
              }]
            }'

    - name: Send Failure Message to Discord
      if: ${{ failure() }}
      run: |
        REPORT_TIME=$(TZ='America/Sao_Paulo' date "+%d/%m/%Y %H:%M:%S")
        REPORT_URL="#TODO"
        curl -X POST ${{ secrets.DISCORD_WEBHOOK }} \
        -H "Content-Type: application/json" \
        -d '{
              "content": "‚ùå Houveram falhas durante a execu√ß√£o dos testes. üëÄ\n\nVerifique o relat√≥rio em: '"$REPORT_URL"'\n\nVerifique o relat√≥rio da build do Percy em: #TODO",
              "embeds": [{
                "title": "Allure Test Report",
                "description": "Por favor, verifique o relat√≥rio para detalhes sobre as falhas. :warning:",
                "color": 15158332,
                "fields": [{
                  "name": ":calendar: Data de Execu√ß√£o",
                  "value": "'"$REPORT_TIME"'"
                }]
              }]
            }'
